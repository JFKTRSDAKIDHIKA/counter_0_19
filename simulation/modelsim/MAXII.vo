// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition"

// DATE "11/11/2024 16:48:00"

// 
// Device: Altera EPM1270T144C5 Package TQFP144
// 

// 
// This Verilog file should be used for QuestaSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module counter_0_19 (
	clk,
	reset,
	pause,
	disp,
	anode_ctrl);
input 	clk;
input 	reset;
input 	pause;
output 	[6:0] disp;
output 	[7:0] anode_ctrl;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("MAXII_v.sdo");
// synopsys translate_on

wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~15 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~20 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~15 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~15 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~15 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~20 ;
wire \clk~combout ;
wire \counting_logic|Add0~2 ;
wire \counting_logic|Add0~2COUT1_26 ;
wire \counting_logic|Add0~10_combout ;
wire \pause~combout ;
wire \debounce_pause|btn_clean~regout ;
wire \counting_logic|running~0_combout ;
wire \counting_logic|Add1~32COUT1_38 ;
wire \counting_logic|Add1~27 ;
wire \counting_logic|Add1~15_combout ;
wire \counting_logic|second_counter[0]~0_combout ;
wire \counting_logic|Add1~17 ;
wire \counting_logic|Add1~17COUT1_39 ;
wire \counting_logic|Add1~10_combout ;
wire \counting_logic|Add1~0_combout ;
wire \counting_logic|Add1~12 ;
wire \counting_logic|Add1~12COUT1_40 ;
wire \counting_logic|Add1~5_combout ;
wire \counting_logic|Add1~2 ;
wire \counting_logic|Add1~2COUT1_36 ;
wire \counting_logic|Add1~22COUT1_37 ;
wire \counting_logic|Add1~32 ;
wire \counting_logic|Add1~25_combout ;
wire \counting_logic|Add1~20_combout ;
wire \counting_logic|Equal0~0 ;
wire \counting_logic|Add1~22 ;
wire \counting_logic|Add1~30_combout ;
wire \counting_logic|Equal0~1 ;
wire \counting_logic|count[4]~0_combout ;
wire \counting_logic|Add0~0_combout ;
wire \counting_logic|Equal1~1 ;
wire \counting_logic|Add0~12 ;
wire \counting_logic|Add0~12COUT1_27 ;
wire \counting_logic|Add0~15_combout ;
wire \counting_logic|Add0~17 ;
wire \counting_logic|Add0~17COUT1_28 ;
wire \counting_logic|Add0~5_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUT ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUTCOUT1_24 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17_cout0 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17COUT1_25 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7COUT1_26 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12COUT1_27 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ;
wire \counting_logic|Add0~7 ;
wire \counting_logic|Add0~7COUT1_29 ;
wire \counting_logic|Add0~20_combout ;
wire \counting_logic|Equal1~0_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~7_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~8_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|StageOut[17]~2 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[1]~COUT ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[1]~COUTCOUT1_28 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22_cout0 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22COUT1_29 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7COUT1_30 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12COUT1_31 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17_cout0 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17COUT1_32 ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5_combout ;
wire \decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ;
wire \decoder|WideOr6~0_combout ;
wire \display|Selector5~0_combout ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUT ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUTCOUT1_27 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22_combout ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17_cout0 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17COUT1_24 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12COUT1_25 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7COUT1_26 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ;
wire \decoder|Div0|auto_generated|divider|divider|StageOut[18]~0_combout ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5_combout ;
wire \decoder|Div0|auto_generated|divider|divider|StageOut[18]~1_combout ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10_combout ;
wire \decoder|Div0|auto_generated|divider|divider|StageOut[17]~3_combout ;
wire \decoder|Div0|auto_generated|divider|divider|StageOut[17]~2_combout ;
wire \decoder|Div0|auto_generated|divider|divider|StageOut[16]~4_combout ;
wire \decoder|Div0|auto_generated|divider|divider|StageOut[16]~5_combout ;
wire \decoder|Div0|auto_generated|divider|divider|StageOut[15]~6_combout ;
wire \decoder|Div0|auto_generated|divider|divider|StageOut[15]~7_combout ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22_cout0 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22COUT1_26 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17_cout0 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17COUT1_27 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12_cout0 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12COUT1_28 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7_cout0 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7COUT1_29 ;
wire \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout ;
wire \display|Selector5~1_combout ;
wire \decoder|WideOr5~0_combout ;
wire \decoder|WideOr4~0_combout ;
wire \decoder|WideOr3~0_combout ;
wire \display|Selector6~2_combout ;
wire \display|Selector0~0_combout ;
wire \display|Selector2~0_combout ;
wire \decoder|Decoder0~0_combout ;
wire \display|Selector1~3_combout ;
wire \display|Selector5~3 ;
wire \display|Selector0~1_combout ;
wire [4:0] \counting_logic|count ;
wire [6:0] \display|segment ;
wire [7:0] \display|anode_ctrl ;
wire [2:0] \display|scan_index ;
wire [6:0] \counting_logic|second_counter ;
wire [2:0] \debounce_pause|shift_reg ;
wire [3:0] \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella ;


// Location: PIN_18,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X11_Y4_N9
maxii_lcell \display|scan_index[0] (
// Equation(s):
// \display|scan_index [0] = DFFEAS((((!\display|scan_index [0]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\display|scan_index [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|scan_index [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|scan_index[0] .lut_mask = "00ff";
defparam \display|scan_index[0] .operation_mode = "normal";
defparam \display|scan_index[0] .output_mode = "reg_only";
defparam \display|scan_index[0] .register_cascade_mode = "off";
defparam \display|scan_index[0] .sum_lutc_input = "datac";
defparam \display|scan_index[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N0
maxii_lcell \display|scan_index[1] (
// Equation(s):
// \display|scan_index [1] = DFFEAS(((\display|scan_index [1] $ (\display|scan_index [0]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\display|scan_index [1]),
	.datad(\display|scan_index [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|scan_index [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|scan_index[1] .lut_mask = "0ff0";
defparam \display|scan_index[1] .operation_mode = "normal";
defparam \display|scan_index[1] .output_mode = "reg_only";
defparam \display|scan_index[1] .register_cascade_mode = "off";
defparam \display|scan_index[1] .sum_lutc_input = "datac";
defparam \display|scan_index[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y4_N4
maxii_lcell \display|scan_index[2] (
// Equation(s):
// \display|scan_index [2] = DFFEAS((\display|scan_index [2] $ (((\display|scan_index [1] & \display|scan_index [0])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\display|scan_index [1]),
	.datab(vcc),
	.datac(\display|scan_index [2]),
	.datad(\display|scan_index [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|scan_index [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|scan_index[2] .lut_mask = "5af0";
defparam \display|scan_index[2] .operation_mode = "normal";
defparam \display|scan_index[2] .output_mode = "reg_only";
defparam \display|scan_index[2] .register_cascade_mode = "off";
defparam \display|scan_index[2] .sum_lutc_input = "datac";
defparam \display|scan_index[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N5
maxii_lcell \counting_logic|Add0~0 (
// Equation(s):
// \counting_logic|Add0~0_combout  = (!\counting_logic|count [0])
// \counting_logic|Add0~2  = CARRY((\counting_logic|count [0]))
// \counting_logic|Add0~2COUT1_26  = CARRY((\counting_logic|count [0]))

	.clk(gnd),
	.dataa(\counting_logic|count [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Add0~0_combout ),
	.regout(),
	.cout(),
	.cout0(\counting_logic|Add0~2 ),
	.cout1(\counting_logic|Add0~2COUT1_26 ));
// synopsys translate_off
defparam \counting_logic|Add0~0 .lut_mask = "55aa";
defparam \counting_logic|Add0~0 .operation_mode = "arithmetic";
defparam \counting_logic|Add0~0 .output_mode = "comb_only";
defparam \counting_logic|Add0~0 .register_cascade_mode = "off";
defparam \counting_logic|Add0~0 .sum_lutc_input = "datac";
defparam \counting_logic|Add0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N6
maxii_lcell \counting_logic|Add0~10 (
// Equation(s):
// \counting_logic|Add0~10_combout  = (\counting_logic|count [1] $ ((\counting_logic|Add0~2 )))
// \counting_logic|Add0~12  = CARRY(((!\counting_logic|Add0~2 ) # (!\counting_logic|count [1])))
// \counting_logic|Add0~12COUT1_27  = CARRY(((!\counting_logic|Add0~2COUT1_26 ) # (!\counting_logic|count [1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\counting_logic|count [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\counting_logic|Add0~2 ),
	.cin1(\counting_logic|Add0~2COUT1_26 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Add0~10_combout ),
	.regout(),
	.cout(),
	.cout0(\counting_logic|Add0~12 ),
	.cout1(\counting_logic|Add0~12COUT1_27 ));
// synopsys translate_off
defparam \counting_logic|Add0~10 .cin0_used = "true";
defparam \counting_logic|Add0~10 .cin1_used = "true";
defparam \counting_logic|Add0~10 .lut_mask = "3c3f";
defparam \counting_logic|Add0~10 .operation_mode = "arithmetic";
defparam \counting_logic|Add0~10 .output_mode = "comb_only";
defparam \counting_logic|Add0~10 .register_cascade_mode = "off";
defparam \counting_logic|Add0~10 .sum_lutc_input = "cin";
defparam \counting_logic|Add0~10 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_61,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \pause~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\pause~combout ),
	.padio(pause));
// synopsys translate_off
defparam \pause~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X9_Y5_N1
maxii_lcell \debounce_pause|shift_reg[0] (
// Equation(s):
// \debounce_pause|shift_reg [0] = DFFEAS(((\pause~combout )), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\pause~combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\debounce_pause|shift_reg [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \debounce_pause|shift_reg[0] .lut_mask = "cccc";
defparam \debounce_pause|shift_reg[0] .operation_mode = "normal";
defparam \debounce_pause|shift_reg[0] .output_mode = "reg_only";
defparam \debounce_pause|shift_reg[0] .register_cascade_mode = "off";
defparam \debounce_pause|shift_reg[0] .sum_lutc_input = "datac";
defparam \debounce_pause|shift_reg[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N4
maxii_lcell \debounce_pause|shift_reg[1] (
// Equation(s):
// \debounce_pause|shift_reg [1] = DFFEAS((((\debounce_pause|shift_reg [0]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\debounce_pause|shift_reg [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\debounce_pause|shift_reg [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \debounce_pause|shift_reg[1] .lut_mask = "ff00";
defparam \debounce_pause|shift_reg[1] .operation_mode = "normal";
defparam \debounce_pause|shift_reg[1] .output_mode = "reg_only";
defparam \debounce_pause|shift_reg[1] .register_cascade_mode = "off";
defparam \debounce_pause|shift_reg[1] .sum_lutc_input = "datac";
defparam \debounce_pause|shift_reg[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N2
maxii_lcell \debounce_pause|shift_reg[2] (
// Equation(s):
// \debounce_pause|shift_reg [2] = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , , \debounce_pause|shift_reg [1], , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\debounce_pause|shift_reg [1]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\debounce_pause|shift_reg [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \debounce_pause|shift_reg[2] .lut_mask = "0000";
defparam \debounce_pause|shift_reg[2] .operation_mode = "normal";
defparam \debounce_pause|shift_reg[2] .output_mode = "reg_only";
defparam \debounce_pause|shift_reg[2] .register_cascade_mode = "off";
defparam \debounce_pause|shift_reg[2] .sum_lutc_input = "datac";
defparam \debounce_pause|shift_reg[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y5_N8
maxii_lcell \debounce_pause|btn_clean (
// Equation(s):
// \debounce_pause|btn_clean~regout  = DFFEAS((\debounce_pause|btn_clean~regout  & ((\debounce_pause|shift_reg [2]) # ((\debounce_pause|shift_reg [1]) # (\debounce_pause|shift_reg [0])))) # (!\debounce_pause|btn_clean~regout  & (\debounce_pause|shift_reg [2] 
// & (\debounce_pause|shift_reg [1] & \debounce_pause|shift_reg [0]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\debounce_pause|btn_clean~regout ),
	.datab(\debounce_pause|shift_reg [2]),
	.datac(\debounce_pause|shift_reg [1]),
	.datad(\debounce_pause|shift_reg [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\debounce_pause|btn_clean~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \debounce_pause|btn_clean .lut_mask = "eaa8";
defparam \debounce_pause|btn_clean .operation_mode = "normal";
defparam \debounce_pause|btn_clean .output_mode = "reg_only";
defparam \debounce_pause|btn_clean .register_cascade_mode = "off";
defparam \debounce_pause|btn_clean .sum_lutc_input = "datac";
defparam \debounce_pause|btn_clean .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N4
maxii_lcell \counting_logic|running~0 (
// Equation(s):
// \counting_logic|running~0_combout  = ((\counting_logic|running~0_combout  $ (\debounce_pause|btn_clean~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\counting_logic|running~0_combout ),
	.datad(\debounce_pause|btn_clean~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|running~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|running~0 .lut_mask = "0ff0";
defparam \counting_logic|running~0 .operation_mode = "normal";
defparam \counting_logic|running~0 .output_mode = "comb_only";
defparam \counting_logic|running~0 .register_cascade_mode = "off";
defparam \counting_logic|running~0 .sum_lutc_input = "datac";
defparam \counting_logic|running~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N3
maxii_lcell \counting_logic|Add1~30 (
// Equation(s):
// \counting_logic|Add1~30_combout  = \counting_logic|second_counter [2] $ ((((!\counting_logic|Add1~22 ))))
// \counting_logic|Add1~32  = CARRY((\counting_logic|second_counter [2] & ((!\counting_logic|Add1~22 ))))
// \counting_logic|Add1~32COUT1_38  = CARRY((\counting_logic|second_counter [2] & ((!\counting_logic|Add1~22COUT1_37 ))))

	.clk(gnd),
	.dataa(\counting_logic|second_counter [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\counting_logic|Add1~22 ),
	.cin1(\counting_logic|Add1~22COUT1_37 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Add1~30_combout ),
	.regout(),
	.cout(),
	.cout0(\counting_logic|Add1~32 ),
	.cout1(\counting_logic|Add1~32COUT1_38 ));
// synopsys translate_off
defparam \counting_logic|Add1~30 .cin0_used = "true";
defparam \counting_logic|Add1~30 .cin1_used = "true";
defparam \counting_logic|Add1~30 .lut_mask = "a50a";
defparam \counting_logic|Add1~30 .operation_mode = "arithmetic";
defparam \counting_logic|Add1~30 .output_mode = "comb_only";
defparam \counting_logic|Add1~30 .register_cascade_mode = "off";
defparam \counting_logic|Add1~30 .sum_lutc_input = "cin";
defparam \counting_logic|Add1~30 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N4
maxii_lcell \counting_logic|Add1~25 (
// Equation(s):
// \counting_logic|Add1~25_combout  = (\counting_logic|second_counter [3] $ ((\counting_logic|Add1~32 )))
// \counting_logic|Add1~27  = CARRY(((!\counting_logic|Add1~32COUT1_38 ) # (!\counting_logic|second_counter [3])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\counting_logic|second_counter [3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\counting_logic|Add1~32 ),
	.cin1(\counting_logic|Add1~32COUT1_38 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Add1~25_combout ),
	.regout(),
	.cout(\counting_logic|Add1~27 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|Add1~25 .cin0_used = "true";
defparam \counting_logic|Add1~25 .cin1_used = "true";
defparam \counting_logic|Add1~25 .lut_mask = "3c3f";
defparam \counting_logic|Add1~25 .operation_mode = "arithmetic";
defparam \counting_logic|Add1~25 .output_mode = "comb_only";
defparam \counting_logic|Add1~25 .register_cascade_mode = "off";
defparam \counting_logic|Add1~25 .sum_lutc_input = "cin";
defparam \counting_logic|Add1~25 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N5
maxii_lcell \counting_logic|Add1~15 (
// Equation(s):
// \counting_logic|Add1~15_combout  = (\counting_logic|second_counter [4] $ ((!\counting_logic|Add1~27 )))
// \counting_logic|Add1~17  = CARRY(((\counting_logic|second_counter [4] & !\counting_logic|Add1~27 )))
// \counting_logic|Add1~17COUT1_39  = CARRY(((\counting_logic|second_counter [4] & !\counting_logic|Add1~27 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\counting_logic|second_counter [4]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counting_logic|Add1~27 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Add1~15_combout ),
	.regout(),
	.cout(),
	.cout0(\counting_logic|Add1~17 ),
	.cout1(\counting_logic|Add1~17COUT1_39 ));
// synopsys translate_off
defparam \counting_logic|Add1~15 .cin_used = "true";
defparam \counting_logic|Add1~15 .lut_mask = "c30c";
defparam \counting_logic|Add1~15 .operation_mode = "arithmetic";
defparam \counting_logic|Add1~15 .output_mode = "comb_only";
defparam \counting_logic|Add1~15 .register_cascade_mode = "off";
defparam \counting_logic|Add1~15 .sum_lutc_input = "cin";
defparam \counting_logic|Add1~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N8
maxii_lcell \counting_logic|second_counter[0]~0 (
// Equation(s):
// \counting_logic|second_counter[0]~0_combout  = (((\counting_logic|running~0_combout  & !\debounce_pause|btn_clean~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\counting_logic|running~0_combout ),
	.datad(\debounce_pause|btn_clean~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|second_counter[0]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|second_counter[0]~0 .lut_mask = "00f0";
defparam \counting_logic|second_counter[0]~0 .operation_mode = "normal";
defparam \counting_logic|second_counter[0]~0 .output_mode = "comb_only";
defparam \counting_logic|second_counter[0]~0 .register_cascade_mode = "off";
defparam \counting_logic|second_counter[0]~0 .sum_lutc_input = "datac";
defparam \counting_logic|second_counter[0]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y8_N2
maxii_lcell \counting_logic|second_counter[4] (
// Equation(s):
// \counting_logic|second_counter [4] = DFFEAS((((\counting_logic|Add1~15_combout ))), GLOBAL(\clk~combout ), VCC, , \counting_logic|second_counter[0]~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\counting_logic|Add1~15_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\counting_logic|second_counter[0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\counting_logic|second_counter [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|second_counter[4] .lut_mask = "ff00";
defparam \counting_logic|second_counter[4] .operation_mode = "normal";
defparam \counting_logic|second_counter[4] .output_mode = "reg_only";
defparam \counting_logic|second_counter[4] .register_cascade_mode = "off";
defparam \counting_logic|second_counter[4] .sum_lutc_input = "datac";
defparam \counting_logic|second_counter[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N6
maxii_lcell \counting_logic|Add1~10 (
// Equation(s):
// \counting_logic|Add1~10_combout  = \counting_logic|second_counter [5] $ (((((!\counting_logic|Add1~27  & \counting_logic|Add1~17 ) # (\counting_logic|Add1~27  & \counting_logic|Add1~17COUT1_39 )))))
// \counting_logic|Add1~12  = CARRY(((!\counting_logic|Add1~17 )) # (!\counting_logic|second_counter [5]))
// \counting_logic|Add1~12COUT1_40  = CARRY(((!\counting_logic|Add1~17COUT1_39 )) # (!\counting_logic|second_counter [5]))

	.clk(gnd),
	.dataa(\counting_logic|second_counter [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counting_logic|Add1~27 ),
	.cin0(\counting_logic|Add1~17 ),
	.cin1(\counting_logic|Add1~17COUT1_39 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Add1~10_combout ),
	.regout(),
	.cout(),
	.cout0(\counting_logic|Add1~12 ),
	.cout1(\counting_logic|Add1~12COUT1_40 ));
// synopsys translate_off
defparam \counting_logic|Add1~10 .cin0_used = "true";
defparam \counting_logic|Add1~10 .cin1_used = "true";
defparam \counting_logic|Add1~10 .cin_used = "true";
defparam \counting_logic|Add1~10 .lut_mask = "5a5f";
defparam \counting_logic|Add1~10 .operation_mode = "arithmetic";
defparam \counting_logic|Add1~10 .output_mode = "comb_only";
defparam \counting_logic|Add1~10 .register_cascade_mode = "off";
defparam \counting_logic|Add1~10 .sum_lutc_input = "cin";
defparam \counting_logic|Add1~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N6
maxii_lcell \counting_logic|second_counter[5] (
// Equation(s):
// \counting_logic|second_counter [5] = DFFEAS((((\counting_logic|Add1~10_combout  & !\counting_logic|Equal0~1 ))), GLOBAL(\clk~combout ), VCC, , \counting_logic|second_counter[0]~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\counting_logic|Add1~10_combout ),
	.datad(\counting_logic|Equal0~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\counting_logic|second_counter[0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\counting_logic|second_counter [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|second_counter[5] .lut_mask = "00f0";
defparam \counting_logic|second_counter[5] .operation_mode = "normal";
defparam \counting_logic|second_counter[5] .output_mode = "reg_only";
defparam \counting_logic|second_counter[5] .register_cascade_mode = "off";
defparam \counting_logic|second_counter[5] .sum_lutc_input = "datac";
defparam \counting_logic|second_counter[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N1
maxii_lcell \counting_logic|Add1~0 (
// Equation(s):
// \counting_logic|Add1~0_combout  = (!\counting_logic|second_counter [0])
// \counting_logic|Add1~2  = CARRY((\counting_logic|second_counter [0]))
// \counting_logic|Add1~2COUT1_36  = CARRY((\counting_logic|second_counter [0]))

	.clk(gnd),
	.dataa(\counting_logic|second_counter [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Add1~0_combout ),
	.regout(),
	.cout(),
	.cout0(\counting_logic|Add1~2 ),
	.cout1(\counting_logic|Add1~2COUT1_36 ));
// synopsys translate_off
defparam \counting_logic|Add1~0 .lut_mask = "55aa";
defparam \counting_logic|Add1~0 .operation_mode = "arithmetic";
defparam \counting_logic|Add1~0 .output_mode = "comb_only";
defparam \counting_logic|Add1~0 .register_cascade_mode = "off";
defparam \counting_logic|Add1~0 .sum_lutc_input = "datac";
defparam \counting_logic|Add1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N7
maxii_lcell \counting_logic|Add1~5 (
// Equation(s):
// \counting_logic|Add1~5_combout  = (((!\counting_logic|Add1~27  & \counting_logic|Add1~12 ) # (\counting_logic|Add1~27  & \counting_logic|Add1~12COUT1_40 ) $ (!\counting_logic|second_counter [6])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\counting_logic|second_counter [6]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counting_logic|Add1~27 ),
	.cin0(\counting_logic|Add1~12 ),
	.cin1(\counting_logic|Add1~12COUT1_40 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Add1~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|Add1~5 .cin0_used = "true";
defparam \counting_logic|Add1~5 .cin1_used = "true";
defparam \counting_logic|Add1~5 .cin_used = "true";
defparam \counting_logic|Add1~5 .lut_mask = "f00f";
defparam \counting_logic|Add1~5 .operation_mode = "normal";
defparam \counting_logic|Add1~5 .output_mode = "comb_only";
defparam \counting_logic|Add1~5 .register_cascade_mode = "off";
defparam \counting_logic|Add1~5 .sum_lutc_input = "cin";
defparam \counting_logic|Add1~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N5
maxii_lcell \counting_logic|second_counter[6] (
// Equation(s):
// \counting_logic|second_counter [6] = DFFEAS((!\counting_logic|Equal0~1  & (((\counting_logic|Add1~5_combout )))), GLOBAL(\clk~combout ), VCC, , \counting_logic|second_counter[0]~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(\counting_logic|Equal0~1 ),
	.datab(vcc),
	.datac(vcc),
	.datad(\counting_logic|Add1~5_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\counting_logic|second_counter[0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\counting_logic|second_counter [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|second_counter[6] .lut_mask = "5500";
defparam \counting_logic|second_counter[6] .operation_mode = "normal";
defparam \counting_logic|second_counter[6] .output_mode = "reg_only";
defparam \counting_logic|second_counter[6] .register_cascade_mode = "off";
defparam \counting_logic|second_counter[6] .sum_lutc_input = "datac";
defparam \counting_logic|second_counter[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N8
maxii_lcell \counting_logic|second_counter[0] (
// Equation(s):
// \counting_logic|Equal0~0  = (\counting_logic|second_counter [5] & (!\counting_logic|second_counter [4] & (B1_second_counter[0] & \counting_logic|second_counter [6])))
// \counting_logic|second_counter [0] = DFFEAS(\counting_logic|Equal0~0 , GLOBAL(\clk~combout ), VCC, , \counting_logic|second_counter[0]~0_combout , \counting_logic|Add1~0_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\counting_logic|second_counter [5]),
	.datab(\counting_logic|second_counter [4]),
	.datac(\counting_logic|Add1~0_combout ),
	.datad(\counting_logic|second_counter [6]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\counting_logic|second_counter[0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Equal0~0 ),
	.regout(\counting_logic|second_counter [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|second_counter[0] .lut_mask = "2000";
defparam \counting_logic|second_counter[0] .operation_mode = "normal";
defparam \counting_logic|second_counter[0] .output_mode = "reg_and_comb";
defparam \counting_logic|second_counter[0] .register_cascade_mode = "off";
defparam \counting_logic|second_counter[0] .sum_lutc_input = "qfbk";
defparam \counting_logic|second_counter[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X8_Y8_N2
maxii_lcell \counting_logic|Add1~20 (
// Equation(s):
// \counting_logic|Add1~20_combout  = (\counting_logic|second_counter [1] $ ((\counting_logic|Add1~2 )))
// \counting_logic|Add1~22  = CARRY(((!\counting_logic|Add1~2 ) # (!\counting_logic|second_counter [1])))
// \counting_logic|Add1~22COUT1_37  = CARRY(((!\counting_logic|Add1~2COUT1_36 ) # (!\counting_logic|second_counter [1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\counting_logic|second_counter [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\counting_logic|Add1~2 ),
	.cin1(\counting_logic|Add1~2COUT1_36 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Add1~20_combout ),
	.regout(),
	.cout(),
	.cout0(\counting_logic|Add1~22 ),
	.cout1(\counting_logic|Add1~22COUT1_37 ));
// synopsys translate_off
defparam \counting_logic|Add1~20 .cin0_used = "true";
defparam \counting_logic|Add1~20 .cin1_used = "true";
defparam \counting_logic|Add1~20 .lut_mask = "3c3f";
defparam \counting_logic|Add1~20 .operation_mode = "arithmetic";
defparam \counting_logic|Add1~20 .output_mode = "comb_only";
defparam \counting_logic|Add1~20 .register_cascade_mode = "off";
defparam \counting_logic|Add1~20 .sum_lutc_input = "cin";
defparam \counting_logic|Add1~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y8_N4
maxii_lcell \counting_logic|second_counter[3] (
// Equation(s):
// \counting_logic|second_counter [3] = DFFEAS((((\counting_logic|Add1~25_combout ))), GLOBAL(\clk~combout ), VCC, , \counting_logic|second_counter[0]~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\counting_logic|Add1~25_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\counting_logic|second_counter[0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\counting_logic|second_counter [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|second_counter[3] .lut_mask = "ff00";
defparam \counting_logic|second_counter[3] .operation_mode = "normal";
defparam \counting_logic|second_counter[3] .output_mode = "reg_only";
defparam \counting_logic|second_counter[3] .register_cascade_mode = "off";
defparam \counting_logic|second_counter[3] .sum_lutc_input = "datac";
defparam \counting_logic|second_counter[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N0
maxii_lcell \counting_logic|second_counter[1] (
// Equation(s):
// \counting_logic|Equal0~1  = (!\counting_logic|second_counter [2] & (!\counting_logic|second_counter [3] & (B1_second_counter[1] & \counting_logic|Equal0~0 )))
// \counting_logic|second_counter [1] = DFFEAS(\counting_logic|Equal0~1 , GLOBAL(\clk~combout ), VCC, , \counting_logic|second_counter[0]~0_combout , \counting_logic|Add1~20_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\counting_logic|second_counter [2]),
	.datab(\counting_logic|second_counter [3]),
	.datac(\counting_logic|Add1~20_combout ),
	.datad(\counting_logic|Equal0~0 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\counting_logic|second_counter[0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Equal0~1 ),
	.regout(\counting_logic|second_counter [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|second_counter[1] .lut_mask = "1000";
defparam \counting_logic|second_counter[1] .operation_mode = "normal";
defparam \counting_logic|second_counter[1] .output_mode = "reg_and_comb";
defparam \counting_logic|second_counter[1] .register_cascade_mode = "off";
defparam \counting_logic|second_counter[1] .sum_lutc_input = "qfbk";
defparam \counting_logic|second_counter[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X8_Y8_N9
maxii_lcell \counting_logic|second_counter[2] (
// Equation(s):
// \counting_logic|second_counter [2] = DFFEAS(((!\counting_logic|Equal0~1  & ((\counting_logic|Add1~30_combout )))), GLOBAL(\clk~combout ), VCC, , \counting_logic|second_counter[0]~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\counting_logic|Equal0~1 ),
	.datac(vcc),
	.datad(\counting_logic|Add1~30_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\counting_logic|second_counter[0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\counting_logic|second_counter [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|second_counter[2] .lut_mask = "3300";
defparam \counting_logic|second_counter[2] .operation_mode = "normal";
defparam \counting_logic|second_counter[2] .output_mode = "reg_only";
defparam \counting_logic|second_counter[2] .register_cascade_mode = "off";
defparam \counting_logic|second_counter[2] .sum_lutc_input = "datac";
defparam \counting_logic|second_counter[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N2
maxii_lcell \counting_logic|count[4]~0 (
// Equation(s):
// \counting_logic|count[4]~0_combout  = ((!\debounce_pause|btn_clean~regout  & (\counting_logic|running~0_combout  & \counting_logic|Equal0~1 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\debounce_pause|btn_clean~regout ),
	.datac(\counting_logic|running~0_combout ),
	.datad(\counting_logic|Equal0~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|count[4]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|count[4]~0 .lut_mask = "3000";
defparam \counting_logic|count[4]~0 .operation_mode = "normal";
defparam \counting_logic|count[4]~0 .output_mode = "comb_only";
defparam \counting_logic|count[4]~0 .register_cascade_mode = "off";
defparam \counting_logic|count[4]~0 .sum_lutc_input = "datac";
defparam \counting_logic|count[4]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N2
maxii_lcell \counting_logic|count[1] (
// Equation(s):
// \counting_logic|count [1] = DFFEAS((\counting_logic|Add0~10_combout ), GLOBAL(\clk~combout ), VCC, , \counting_logic|count[4]~0_combout , , , , )
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[1]~COUT  = CARRY(((\counting_logic|count [1])))
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[1]~COUTCOUT1_28  = CARRY(((\counting_logic|count [1])))

	.clk(\clk~combout ),
	.dataa(\counting_logic|Add0~10_combout ),
	.datab(\counting_logic|count [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\counting_logic|count[4]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\counting_logic|count [1]),
	.cout(),
	.cout0(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[1]~COUT ),
	.cout1(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[1]~COUTCOUT1_28 ));
// synopsys translate_off
defparam \counting_logic|count[1] .lut_mask = "aacc";
defparam \counting_logic|count[1] .operation_mode = "arithmetic";
defparam \counting_logic|count[1] .output_mode = "reg_only";
defparam \counting_logic|count[1] .register_cascade_mode = "off";
defparam \counting_logic|count[1] .sum_lutc_input = "datac";
defparam \counting_logic|count[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N4
maxii_lcell \counting_logic|count[0] (
// Equation(s):
// \counting_logic|Equal1~1  = (((\counting_logic|count [2]) # (!B1_count[0])) # (!\counting_logic|Equal1~0_combout )) # (!\counting_logic|count [1])
// \counting_logic|count [0] = DFFEAS(\counting_logic|Equal1~1 , GLOBAL(\clk~combout ), VCC, , \counting_logic|count[4]~0_combout , \counting_logic|Add0~0_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\counting_logic|count [1]),
	.datab(\counting_logic|Equal1~0_combout ),
	.datac(\counting_logic|Add0~0_combout ),
	.datad(\counting_logic|count [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\counting_logic|count[4]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Equal1~1 ),
	.regout(\counting_logic|count [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|count[0] .lut_mask = "ff7f";
defparam \counting_logic|count[0] .operation_mode = "normal";
defparam \counting_logic|count[0] .output_mode = "reg_and_comb";
defparam \counting_logic|count[0] .register_cascade_mode = "off";
defparam \counting_logic|count[0] .sum_lutc_input = "qfbk";
defparam \counting_logic|count[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y5_N7
maxii_lcell \counting_logic|Add0~15 (
// Equation(s):
// \counting_logic|Add0~15_combout  = (\counting_logic|count [2] $ ((!\counting_logic|Add0~12 )))
// \counting_logic|Add0~17  = CARRY(((\counting_logic|count [2] & !\counting_logic|Add0~12 )))
// \counting_logic|Add0~17COUT1_28  = CARRY(((\counting_logic|count [2] & !\counting_logic|Add0~12COUT1_27 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\counting_logic|count [2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\counting_logic|Add0~12 ),
	.cin1(\counting_logic|Add0~12COUT1_27 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Add0~15_combout ),
	.regout(),
	.cout(),
	.cout0(\counting_logic|Add0~17 ),
	.cout1(\counting_logic|Add0~17COUT1_28 ));
// synopsys translate_off
defparam \counting_logic|Add0~15 .cin0_used = "true";
defparam \counting_logic|Add0~15 .cin1_used = "true";
defparam \counting_logic|Add0~15 .lut_mask = "c30c";
defparam \counting_logic|Add0~15 .operation_mode = "arithmetic";
defparam \counting_logic|Add0~15 .output_mode = "comb_only";
defparam \counting_logic|Add0~15 .register_cascade_mode = "off";
defparam \counting_logic|Add0~15 .sum_lutc_input = "cin";
defparam \counting_logic|Add0~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N5
maxii_lcell \counting_logic|count[2] (
// Equation(s):
// \counting_logic|count [2] = DFFEAS(((\counting_logic|Equal1~1 )), GLOBAL(\clk~combout ), VCC, , \counting_logic|count[4]~0_combout , , , !\counting_logic|Add0~15_combout , )
// \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUT  = CARRY((\counting_logic|count [2]))
// \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUTCOUT1_24  = CARRY((\counting_logic|count [2]))

	.clk(\clk~combout ),
	.dataa(\counting_logic|count [2]),
	.datab(\counting_logic|Equal1~1 ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\counting_logic|Add0~15_combout ),
	.sload(gnd),
	.ena(\counting_logic|count[4]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\counting_logic|count [2]),
	.cout(),
	.cout0(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUT ),
	.cout1(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUTCOUT1_24 ));
// synopsys translate_off
defparam \counting_logic|count[2] .lut_mask = "ccaa";
defparam \counting_logic|count[2] .operation_mode = "arithmetic";
defparam \counting_logic|count[2] .output_mode = "reg_only";
defparam \counting_logic|count[2] .register_cascade_mode = "off";
defparam \counting_logic|count[2] .sum_lutc_input = "datac";
defparam \counting_logic|count[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y5_N8
maxii_lcell \counting_logic|Add0~5 (
// Equation(s):
// \counting_logic|Add0~5_combout  = (\counting_logic|count [3] $ ((\counting_logic|Add0~17 )))
// \counting_logic|Add0~7  = CARRY(((!\counting_logic|Add0~17 ) # (!\counting_logic|count [3])))
// \counting_logic|Add0~7COUT1_29  = CARRY(((!\counting_logic|Add0~17COUT1_28 ) # (!\counting_logic|count [3])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\counting_logic|count [3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\counting_logic|Add0~17 ),
	.cin1(\counting_logic|Add0~17COUT1_28 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Add0~5_combout ),
	.regout(),
	.cout(),
	.cout0(\counting_logic|Add0~7 ),
	.cout1(\counting_logic|Add0~7COUT1_29 ));
// synopsys translate_off
defparam \counting_logic|Add0~5 .cin0_used = "true";
defparam \counting_logic|Add0~5 .cin1_used = "true";
defparam \counting_logic|Add0~5 .lut_mask = "3c3f";
defparam \counting_logic|Add0~5 .operation_mode = "arithmetic";
defparam \counting_logic|Add0~5 .output_mode = "comb_only";
defparam \counting_logic|Add0~5 .register_cascade_mode = "off";
defparam \counting_logic|Add0~5 .sum_lutc_input = "cin";
defparam \counting_logic|Add0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N6
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21_combout  = (((\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUT )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUT ),
	.cin1(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUTCOUT1_24 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21 .cin0_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21 .cin1_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21 .lut_mask = "f0f0";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21 .operation_mode = "normal";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21 .sum_lutc_input = "cin";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N0
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17_cout0  = CARRY((\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21_combout ))
// \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17COUT1_25  = CARRY((\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21_combout ))

	.clk(gnd),
	.dataa(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~21_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~15 ),
	.regout(),
	.cout(),
	.cout0(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17_cout0 ),
	.cout1(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17COUT1_25 ));
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 .lut_mask = "ffaa";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 .operation_mode = "arithmetic";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 .output_mode = "none";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 .sum_lutc_input = "datac";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N1
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5_combout  = (\counting_logic|count [3] $ ((!\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17_cout0 )))
// \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7  = CARRY(((!\counting_logic|count [3] & !\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17_cout0 )))
// \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7COUT1_26  = CARRY(((!\counting_logic|count [3] & !\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17COUT1_25 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\counting_logic|count [3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17_cout0 ),
	.cin1(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17COUT1_25 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5_combout ),
	.regout(),
	.cout(),
	.cout0(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7 ),
	.cout1(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7COUT1_26 ));
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .cin0_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .cin1_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .lut_mask = "c303";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .operation_mode = "arithmetic";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .sum_lutc_input = "cin";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N2
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10_combout  = (\counting_logic|count [4] $ ((!\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7 )))
// \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12  = CARRY(((\counting_logic|count [4] & !\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7 )))
// \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12COUT1_27  = CARRY(((\counting_logic|count [4] & !\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7COUT1_26 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\counting_logic|count [4]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7 ),
	.cin1(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7COUT1_26 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10_combout ),
	.regout(),
	.cout(),
	.cout0(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12 ),
	.cout1(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12COUT1_27 ));
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .cin0_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .cin1_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .lut_mask = "c30c";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .operation_mode = "arithmetic";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .sum_lutc_input = "cin";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N3
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout  = (((\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12 ),
	.cin1(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12COUT1_27 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .cin0_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .cin1_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .lut_mask = "f0f0";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .operation_mode = "normal";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .sum_lutc_input = "cin";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N5
maxii_lcell \counting_logic|count[3] (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|StageOut[17]~2  = (((B1_count[3] & !\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout )))
// \counting_logic|count [3] = DFFEAS(\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~2 , GLOBAL(\clk~combout ), VCC, , \counting_logic|count[4]~0_combout , \counting_logic|Add0~5_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\counting_logic|Add0~5_combout ),
	.datad(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\counting_logic|count[4]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~2 ),
	.regout(\counting_logic|count [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|count[3] .lut_mask = "00f0";
defparam \counting_logic|count[3] .operation_mode = "normal";
defparam \counting_logic|count[3] .output_mode = "reg_and_comb";
defparam \counting_logic|count[3] .register_cascade_mode = "off";
defparam \counting_logic|count[3] .sum_lutc_input = "qfbk";
defparam \counting_logic|count[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y5_N9
maxii_lcell \counting_logic|Add0~20 (
// Equation(s):
// \counting_logic|Add0~20_combout  = ((\counting_logic|Add0~7  $ (!\counting_logic|count [4])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\counting_logic|count [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\counting_logic|Add0~7 ),
	.cin1(\counting_logic|Add0~7COUT1_29 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Add0~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|Add0~20 .cin0_used = "true";
defparam \counting_logic|Add0~20 .cin1_used = "true";
defparam \counting_logic|Add0~20 .lut_mask = "f00f";
defparam \counting_logic|Add0~20 .operation_mode = "normal";
defparam \counting_logic|Add0~20 .output_mode = "comb_only";
defparam \counting_logic|Add0~20 .register_cascade_mode = "off";
defparam \counting_logic|Add0~20 .sum_lutc_input = "cin";
defparam \counting_logic|Add0~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N7
maxii_lcell \counting_logic|count[4] (
// Equation(s):
// \counting_logic|count [4] = DFFEAS((((\counting_logic|Add0~20_combout  & \counting_logic|Equal1~1 ))), GLOBAL(\clk~combout ), VCC, , \counting_logic|count[4]~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\counting_logic|Add0~20_combout ),
	.datad(\counting_logic|Equal1~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\counting_logic|count[4]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\counting_logic|count [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|count[4] .lut_mask = "f000";
defparam \counting_logic|count[4] .operation_mode = "normal";
defparam \counting_logic|count[4] .output_mode = "reg_only";
defparam \counting_logic|count[4] .register_cascade_mode = "off";
defparam \counting_logic|count[4] .sum_lutc_input = "datac";
defparam \counting_logic|count[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N1
maxii_lcell \counting_logic|Equal1~0 (
// Equation(s):
// \counting_logic|Equal1~0_combout  = (\counting_logic|count [4] & (((!\counting_logic|count [3]))))

	.clk(gnd),
	.dataa(\counting_logic|count [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(\counting_logic|count [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\counting_logic|Equal1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counting_logic|Equal1~0 .lut_mask = "00aa";
defparam \counting_logic|Equal1~0 .operation_mode = "normal";
defparam \counting_logic|Equal1~0 .output_mode = "comb_only";
defparam \counting_logic|Equal1~0 .register_cascade_mode = "off";
defparam \counting_logic|Equal1~0 .sum_lutc_input = "datac";
defparam \counting_logic|Equal1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N9
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~7 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~7_combout  = ((\counting_logic|count [4] & ((!\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\counting_logic|count [4]),
	.datac(vcc),
	.datad(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|StageOut[18]~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~7 .lut_mask = "00cc";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~7 .operation_mode = "normal";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~7 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~7 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~7 .sum_lutc_input = "datac";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N3
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~8 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~8_combout  = ((\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10_combout  & ((\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10_combout ),
	.datac(vcc),
	.datad(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|StageOut[18]~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~8 .lut_mask = "cc00";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~8 .operation_mode = "normal";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~8 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~8 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~8 .sum_lutc_input = "datac";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[18]~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N6
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3_combout  = (((\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5_combout  & \decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5_combout ),
	.datad(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3 .lut_mask = "f000";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3 .operation_mode = "normal";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3 .sum_lutc_input = "datac";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N0
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6_combout  = (!\counting_logic|count [2] & (((\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ))))

	.clk(gnd),
	.dataa(\counting_logic|count [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6 .lut_mask = "5500";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6 .operation_mode = "normal";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6 .sum_lutc_input = "datac";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N7
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5_combout  = (\counting_logic|count [2] & (((!\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ))))

	.clk(gnd),
	.dataa(\counting_logic|count [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5 .lut_mask = "00aa";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5 .operation_mode = "normal";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5 .sum_lutc_input = "datac";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N3
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26_combout  = (((\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[1]~COUT )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[1]~COUT ),
	.cin1(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[1]~COUTCOUT1_28 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26 .cin0_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26 .cin1_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26 .lut_mask = "f0f0";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26 .operation_mode = "normal";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26 .sum_lutc_input = "cin";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y5_N0
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22_cout0  = CARRY((\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26_combout ))
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22COUT1_29  = CARRY((\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26_combout ))

	.clk(gnd),
	.dataa(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~26_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~20 ),
	.regout(),
	.cout(),
	.cout0(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22_cout0 ),
	.cout1(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22COUT1_29 ));
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 .lut_mask = "ffaa";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 .operation_mode = "arithmetic";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 .output_mode = "none";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 .sum_lutc_input = "datac";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y5_N1
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5_combout  = \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22_cout0  $ (((!\decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6_combout  & 
// (!\decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5_combout ))))
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7  = CARRY((!\decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6_combout  & (!\decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5_combout  & 
// !\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22_cout0 )))
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7COUT1_30  = CARRY((!\decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6_combout  & (!\decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5_combout  & 
// !\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22COUT1_29 )))

	.clk(gnd),
	.dataa(\decoder|Mod0|auto_generated|divider|divider|StageOut[16]~6_combout ),
	.datab(\decoder|Mod0|auto_generated|divider|divider|StageOut[16]~5_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22_cout0 ),
	.cin1(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22COUT1_29 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5_combout ),
	.regout(),
	.cout(),
	.cout0(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7 ),
	.cout1(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7COUT1_30 ));
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5 .cin0_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5 .cin1_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5 .lut_mask = "e101";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5 .operation_mode = "arithmetic";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5 .sum_lutc_input = "cin";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y5_N2
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10_combout  = \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7  $ (((!\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~2  & 
// (!\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3_combout ))))
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12  = CARRY((!\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7  & ((\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~2 ) # 
// (\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3_combout ))))
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12COUT1_31  = CARRY((!\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7COUT1_30  & ((\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~2 ) # 
// (\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3_combout ))))

	.clk(gnd),
	.dataa(\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~2 ),
	.datab(\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7 ),
	.cin1(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7COUT1_30 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10_combout ),
	.regout(),
	.cout(),
	.cout0(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12 ),
	.cout1(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12COUT1_31 ));
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10 .cin0_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10 .cin1_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10 .lut_mask = "e10e";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10 .operation_mode = "arithmetic";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10 .sum_lutc_input = "cin";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y5_N3
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17_cout0  = CARRY((!\decoder|Mod0|auto_generated|divider|divider|StageOut[18]~7_combout  & (!\decoder|Mod0|auto_generated|divider|divider|StageOut[18]~8_combout  & 
// !\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12 )))
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17COUT1_32  = CARRY((!\decoder|Mod0|auto_generated|divider|divider|StageOut[18]~7_combout  & (!\decoder|Mod0|auto_generated|divider|divider|StageOut[18]~8_combout  & 
// !\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12COUT1_31 )))

	.clk(gnd),
	.dataa(\decoder|Mod0|auto_generated|divider|divider|StageOut[18]~7_combout ),
	.datab(\decoder|Mod0|auto_generated|divider|divider|StageOut[18]~8_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12 ),
	.cin1(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12COUT1_31 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~15 ),
	.regout(),
	.cout(),
	.cout0(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17_cout0 ),
	.cout1(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17COUT1_32 ));
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .cin0_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .cin1_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .lut_mask = "ff01";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .operation_mode = "arithmetic";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .output_mode = "none";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .sum_lutc_input = "cin";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y5_N4
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout  = (((!\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17_cout0 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17_cout0 ),
	.cin1(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17COUT1_32 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .cin0_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .cin1_used = "true";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .lut_mask = "0f0f";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .operation_mode = "normal";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .sum_lutc_input = "cin";
defparam \decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y5_N6
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout  = ((\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout  $ (\counting_logic|count [1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout ),
	.datad(\counting_logic|count [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0 .lut_mask = "0ff0";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0 .operation_mode = "normal";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0 .sum_lutc_input = "datac";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y5_N8
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout  = (\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout  & (((\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10_combout )))) # 
// (!\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout  & ((\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~2 ) # ((\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3_combout ))))

	.clk(gnd),
	.dataa(\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~2 ),
	.datab(\decoder|Mod0|auto_generated|divider|divider|StageOut[17]~3_combout ),
	.datac(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout ),
	.datad(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4 .lut_mask = "fe0e";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4 .operation_mode = "normal";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4 .sum_lutc_input = "datac";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y5_N7
maxii_lcell \decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1 (
// Equation(s):
// \decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout  = (\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout  & (((\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5_combout )))) # 
// (!\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout  & (\counting_logic|count [2] $ ((\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ))))

	.clk(gnd),
	.dataa(\counting_logic|count [2]),
	.datab(\decoder|Mod0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.datac(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout ),
	.datad(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1 .lut_mask = "f606";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1 .operation_mode = "normal";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1 .output_mode = "comb_only";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1 .register_cascade_mode = "off";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1 .sum_lutc_input = "datac";
defparam \decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N6
maxii_lcell \decoder|WideOr6~0 (
// Equation(s):
// \decoder|WideOr6~0_combout  = (\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout  & (!\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout  & ((!\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ) # 
// (!\counting_logic|count [0])))) # (!\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout  & ((\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout  $ (\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ))))

	.clk(gnd),
	.dataa(\counting_logic|count [0]),
	.datab(\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout ),
	.datac(\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout ),
	.datad(\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|WideOr6~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|WideOr6~0 .lut_mask = "073c";
defparam \decoder|WideOr6~0 .operation_mode = "normal";
defparam \decoder|WideOr6~0 .output_mode = "comb_only";
defparam \decoder|WideOr6~0 .register_cascade_mode = "off";
defparam \decoder|WideOr6~0 .sum_lutc_input = "datac";
defparam \decoder|WideOr6~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N7
maxii_lcell \display|segment[0] (
// Equation(s):
// \display|segment [0] = DFFEAS((!\display|scan_index [2] & (!\display|scan_index [0] & (!\display|scan_index [1] & \decoder|WideOr6~0_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\display|scan_index [2]),
	.datab(\display|scan_index [0]),
	.datac(\display|scan_index [1]),
	.datad(\decoder|WideOr6~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|segment [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|segment[0] .lut_mask = "0100";
defparam \display|segment[0] .operation_mode = "normal";
defparam \display|segment[0] .output_mode = "reg_only";
defparam \display|segment[0] .register_cascade_mode = "off";
defparam \display|segment[0] .sum_lutc_input = "datac";
defparam \display|segment[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N4
maxii_lcell \display|Selector5~0 (
// Equation(s):
// \display|Selector5~0_combout  = (((!\display|scan_index [1] & !\display|scan_index [2])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\display|scan_index [1]),
	.datad(\display|scan_index [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\display|Selector5~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|Selector5~0 .lut_mask = "000f";
defparam \display|Selector5~0 .operation_mode = "normal";
defparam \display|Selector5~0 .output_mode = "comb_only";
defparam \display|Selector5~0 .register_cascade_mode = "off";
defparam \display|Selector5~0 .sum_lutc_input = "datac";
defparam \display|Selector5~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N8
maxii_lcell \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1] (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella [1] = (\counting_logic|count [2])
// \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUT  = CARRY((\counting_logic|count [2]))
// \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUTCOUT1_27  = CARRY((\counting_logic|count [2]))

	.clk(gnd),
	.dataa(\counting_logic|count [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella [1]),
	.regout(),
	.cout(),
	.cout0(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUT ),
	.cout1(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUTCOUT1_27 ));
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1] .lut_mask = "aaaa";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1] .operation_mode = "arithmetic";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1] .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1] .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1] .sum_lutc_input = "datac";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N9
maxii_lcell \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22_combout  = (((\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUT )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUT ),
	.cin1(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[1]~COUTCOUT1_27 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22 .cin0_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22 .cin1_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22 .lut_mask = "f0f0";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22 .operation_mode = "normal";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22 .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22 .sum_lutc_input = "cin";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N1
maxii_lcell \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17_cout0  = CARRY(((\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22_combout )))
// \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17COUT1_24  = CARRY(((\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~22_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~15 ),
	.regout(),
	.cout(),
	.cout0(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17_cout0 ),
	.cout1(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17COUT1_24 ));
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 .lut_mask = "ffcc";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 .operation_mode = "arithmetic";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 .output_mode = "none";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 .sum_lutc_input = "datac";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N2
maxii_lcell \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10_combout  = (\counting_logic|count [3] $ ((!\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17_cout0 )))
// \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12  = CARRY(((!\counting_logic|count [3] & !\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17_cout0 )))
// \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12COUT1_25  = CARRY(((!\counting_logic|count [3] & !\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17COUT1_24 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\counting_logic|count [3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17_cout0 ),
	.cin1(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~17COUT1_24 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10_combout ),
	.regout(),
	.cout(),
	.cout0(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12 ),
	.cout1(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12COUT1_25 ));
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .cin0_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .cin1_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .lut_mask = "c303";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .operation_mode = "arithmetic";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .sum_lutc_input = "cin";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N3
maxii_lcell \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5_combout  = (\counting_logic|count [4] $ ((!\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12 )))
// \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7  = CARRY(((\counting_logic|count [4] & !\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12 )))
// \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7COUT1_26  = CARRY(((\counting_logic|count [4] & !\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12COUT1_25 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\counting_logic|count [4]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12 ),
	.cin1(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~12COUT1_25 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5_combout ),
	.regout(),
	.cout(),
	.cout0(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7 ),
	.cout1(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7COUT1_26 ));
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .cin0_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .cin1_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .lut_mask = "c30c";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .operation_mode = "arithmetic";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .sum_lutc_input = "cin";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N4
maxii_lcell \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout  = (((\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7 ),
	.cin1(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~7COUT1_26 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .cin0_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .cin1_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .lut_mask = "f0f0";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .operation_mode = "normal";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .sum_lutc_input = "cin";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N8
maxii_lcell \decoder|Div0|auto_generated|divider|divider|StageOut[18]~0 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|StageOut[18]~0_combout  = ((\counting_logic|count [4] & (!\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\counting_logic|count [4]),
	.datac(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|StageOut[18]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[18]~0 .lut_mask = "0c0c";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[18]~0 .operation_mode = "normal";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[18]~0 .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[18]~0 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[18]~0 .sum_lutc_input = "datac";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[18]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N7
maxii_lcell \decoder|Div0|auto_generated|divider|divider|StageOut[18]~1 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|StageOut[18]~1_combout  = (((\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout  & \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.datad(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~5_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|StageOut[18]~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[18]~1 .lut_mask = "f000";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[18]~1 .operation_mode = "normal";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[18]~1 .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[18]~1 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[18]~1 .sum_lutc_input = "datac";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[18]~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N9
maxii_lcell \decoder|Div0|auto_generated|divider|divider|StageOut[17]~3 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|StageOut[17]~3_combout  = (((\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout  & \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.datad(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|StageOut[17]~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[17]~3 .lut_mask = "f000";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[17]~3 .operation_mode = "normal";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[17]~3 .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[17]~3 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[17]~3 .sum_lutc_input = "datac";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[17]~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N6
maxii_lcell \decoder|Div0|auto_generated|divider|divider|StageOut[17]~2 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|StageOut[17]~2_combout  = (((!\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout  & \counting_logic|count [3])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.datad(\counting_logic|count [3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|StageOut[17]~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[17]~2 .lut_mask = "0f00";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[17]~2 .operation_mode = "normal";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[17]~2 .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[17]~2 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[17]~2 .sum_lutc_input = "datac";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[17]~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N5
maxii_lcell \decoder|Div0|auto_generated|divider|divider|StageOut[16]~4 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|StageOut[16]~4_combout  = (((\counting_logic|count [2] & !\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\counting_logic|count [2]),
	.datad(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|StageOut[16]~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[16]~4 .lut_mask = "00f0";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[16]~4 .operation_mode = "normal";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[16]~4 .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[16]~4 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[16]~4 .sum_lutc_input = "datac";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[16]~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y4_N9
maxii_lcell \decoder|Div0|auto_generated|divider|divider|StageOut[16]~5 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|StageOut[16]~5_combout  = ((!\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella [1] & ((\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella [1]),
	.datac(vcc),
	.datad(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|StageOut[16]~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[16]~5 .lut_mask = "3300";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[16]~5 .operation_mode = "normal";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[16]~5 .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[16]~5 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[16]~5 .sum_lutc_input = "datac";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[16]~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N0
maxii_lcell \decoder|Div0|auto_generated|divider|divider|StageOut[15]~6 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|StageOut[15]~6_combout  = (((!\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout  & \counting_logic|count [1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.datad(\counting_logic|count [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|StageOut[15]~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[15]~6 .lut_mask = "0f00";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[15]~6 .operation_mode = "normal";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[15]~6 .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[15]~6 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[15]~6 .sum_lutc_input = "datac";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[15]~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y4_N7
maxii_lcell \decoder|Div0|auto_generated|divider|divider|StageOut[15]~7 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|StageOut[15]~7_combout  = (((\counting_logic|count [1] & \decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\counting_logic|count [1]),
	.datad(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|StageOut[15]~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[15]~7 .lut_mask = "f000";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[15]~7 .operation_mode = "normal";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[15]~7 .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[15]~7 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[15]~7 .sum_lutc_input = "datac";
defparam \decoder|Div0|auto_generated|divider|divider|StageOut[15]~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y4_N0
maxii_lcell \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22_cout0  = CARRY((\decoder|Div0|auto_generated|divider|divider|StageOut[15]~6_combout ) # ((\decoder|Div0|auto_generated|divider|divider|StageOut[15]~7_combout )))
// \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22COUT1_26  = CARRY((\decoder|Div0|auto_generated|divider|divider|StageOut[15]~6_combout ) # ((\decoder|Div0|auto_generated|divider|divider|StageOut[15]~7_combout )))

	.clk(gnd),
	.dataa(\decoder|Div0|auto_generated|divider|divider|StageOut[15]~6_combout ),
	.datab(\decoder|Div0|auto_generated|divider|divider|StageOut[15]~7_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~20 ),
	.regout(),
	.cout(),
	.cout0(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22_cout0 ),
	.cout1(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22COUT1_26 ));
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 .lut_mask = "ffee";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 .operation_mode = "arithmetic";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 .output_mode = "none";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 .sum_lutc_input = "datac";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y4_N1
maxii_lcell \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17_cout0  = CARRY((!\decoder|Div0|auto_generated|divider|divider|StageOut[16]~4_combout  & (!\decoder|Div0|auto_generated|divider|divider|StageOut[16]~5_combout  & 
// !\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22_cout0 )))
// \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17COUT1_27  = CARRY((!\decoder|Div0|auto_generated|divider|divider|StageOut[16]~4_combout  & (!\decoder|Div0|auto_generated|divider|divider|StageOut[16]~5_combout  & 
// !\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22COUT1_26 )))

	.clk(gnd),
	.dataa(\decoder|Div0|auto_generated|divider|divider|StageOut[16]~4_combout ),
	.datab(\decoder|Div0|auto_generated|divider|divider|StageOut[16]~5_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22_cout0 ),
	.cin1(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~22COUT1_26 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~15 ),
	.regout(),
	.cout(),
	.cout0(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17_cout0 ),
	.cout1(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17COUT1_27 ));
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .cin0_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .cin1_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .lut_mask = "ff01";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .operation_mode = "arithmetic";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .output_mode = "none";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .sum_lutc_input = "cin";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y4_N2
maxii_lcell \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12_cout0  = CARRY((!\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17_cout0  & ((\decoder|Div0|auto_generated|divider|divider|StageOut[17]~3_combout ) # 
// (\decoder|Div0|auto_generated|divider|divider|StageOut[17]~2_combout ))))
// \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12COUT1_28  = CARRY((!\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17COUT1_27  & ((\decoder|Div0|auto_generated|divider|divider|StageOut[17]~3_combout ) # 
// (\decoder|Div0|auto_generated|divider|divider|StageOut[17]~2_combout ))))

	.clk(gnd),
	.dataa(\decoder|Div0|auto_generated|divider|divider|StageOut[17]~3_combout ),
	.datab(\decoder|Div0|auto_generated|divider|divider|StageOut[17]~2_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17_cout0 ),
	.cin1(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~17COUT1_27 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~10 ),
	.regout(),
	.cout(),
	.cout0(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12_cout0 ),
	.cout1(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12COUT1_28 ));
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12 .cin0_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12 .cin1_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12 .lut_mask = "ff0e";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12 .operation_mode = "arithmetic";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12 .output_mode = "none";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12 .sum_lutc_input = "cin";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y4_N3
maxii_lcell \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7_cout0  = CARRY((!\decoder|Div0|auto_generated|divider|divider|StageOut[18]~0_combout  & (!\decoder|Div0|auto_generated|divider|divider|StageOut[18]~1_combout  & 
// !\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12_cout0 )))
// \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7COUT1_29  = CARRY((!\decoder|Div0|auto_generated|divider|divider|StageOut[18]~0_combout  & (!\decoder|Div0|auto_generated|divider|divider|StageOut[18]~1_combout  & 
// !\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12COUT1_28 )))

	.clk(gnd),
	.dataa(\decoder|Div0|auto_generated|divider|divider|StageOut[18]~0_combout ),
	.datab(\decoder|Div0|auto_generated|divider|divider|StageOut[18]~1_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12_cout0 ),
	.cin1(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~12COUT1_28 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~5 ),
	.regout(),
	.cout(),
	.cout0(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7_cout0 ),
	.cout1(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7COUT1_29 ));
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7 .cin0_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7 .cin1_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7 .lut_mask = "ff01";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7 .operation_mode = "arithmetic";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7 .output_mode = "none";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7 .sum_lutc_input = "cin";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y4_N4
maxii_lcell \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 (
// Equation(s):
// \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout  = (((!\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7_cout0 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7_cout0 ),
	.cin1(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~7COUT1_29 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .cin0_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .cin1_used = "true";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .lut_mask = "0f0f";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .operation_mode = "normal";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .output_mode = "comb_only";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .register_cascade_mode = "off";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .sum_lutc_input = "cin";
defparam \decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y4_N6
maxii_lcell \display|Selector5~1 (
// Equation(s):
// \display|Selector5~1_combout  = (!\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout  & (((!\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout ))))

	.clk(gnd),
	.dataa(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.datab(vcc),
	.datac(\decoder|Div0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\display|Selector5~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|Selector5~1 .lut_mask = "0505";
defparam \display|Selector5~1 .operation_mode = "normal";
defparam \display|Selector5~1 .output_mode = "comb_only";
defparam \display|Selector5~1 .register_cascade_mode = "off";
defparam \display|Selector5~1 .sum_lutc_input = "datac";
defparam \display|Selector5~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y4_N8
maxii_lcell \decoder|WideOr5~0 (
// Equation(s):
// \decoder|WideOr5~0_combout  = (\counting_logic|count [0] & ((\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout ) # (\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout  $ 
// (!\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout )))) # (!\counting_logic|count [0] & ((\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout  & ((\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout ))) # 
// (!\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout  & (\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout ))))

	.clk(gnd),
	.dataa(\counting_logic|count [0]),
	.datab(\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout ),
	.datac(\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ),
	.datad(\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|WideOr5~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|WideOr5~0 .lut_mask = "fc8e";
defparam \decoder|WideOr5~0 .operation_mode = "normal";
defparam \decoder|WideOr5~0 .output_mode = "comb_only";
defparam \decoder|WideOr5~0 .register_cascade_mode = "off";
defparam \decoder|WideOr5~0 .sum_lutc_input = "datac";
defparam \decoder|WideOr5~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y4_N5
maxii_lcell \display|segment[1] (
// Equation(s):
// \display|segment [1] = DFFEAS((\display|Selector5~0_combout  & ((\display|scan_index [0] & (\display|Selector5~1_combout )) # (!\display|scan_index [0] & ((!\decoder|WideOr5~0_combout ))))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\display|scan_index [0]),
	.datab(\display|Selector5~0_combout ),
	.datac(\display|Selector5~1_combout ),
	.datad(\decoder|WideOr5~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|segment [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|segment[1] .lut_mask = "80c4";
defparam \display|segment[1] .operation_mode = "normal";
defparam \display|segment[1] .output_mode = "reg_only";
defparam \display|segment[1] .register_cascade_mode = "off";
defparam \display|segment[1] .sum_lutc_input = "datac";
defparam \display|segment[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N1
maxii_lcell \decoder|WideOr4~0 (
// Equation(s):
// \decoder|WideOr4~0_combout  = (\counting_logic|count [0]) # ((\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout  & (\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout )) # 
// (!\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout  & ((\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ))))

	.clk(gnd),
	.dataa(\counting_logic|count [0]),
	.datab(\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout ),
	.datac(\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ),
	.datad(\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|WideOr4~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|WideOr4~0 .lut_mask = "eefa";
defparam \decoder|WideOr4~0 .operation_mode = "normal";
defparam \decoder|WideOr4~0 .output_mode = "comb_only";
defparam \decoder|WideOr4~0 .register_cascade_mode = "off";
defparam \decoder|WideOr4~0 .sum_lutc_input = "datac";
defparam \decoder|WideOr4~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N2
maxii_lcell \display|segment[2] (
// Equation(s):
// \display|segment [2] = DFFEAS((\display|Selector5~0_combout  & ((\display|scan_index [0] & (\display|Selector5~1_combout )) # (!\display|scan_index [0] & ((!\decoder|WideOr4~0_combout ))))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\display|Selector5~0_combout ),
	.datab(\display|scan_index [0]),
	.datac(\display|Selector5~1_combout ),
	.datad(\decoder|WideOr4~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|segment [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|segment[2] .lut_mask = "80a2";
defparam \display|segment[2] .operation_mode = "normal";
defparam \display|segment[2] .output_mode = "reg_only";
defparam \display|segment[2] .register_cascade_mode = "off";
defparam \display|segment[2] .sum_lutc_input = "datac";
defparam \display|segment[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N8
maxii_lcell \decoder|WideOr3~0 (
// Equation(s):
// \decoder|WideOr3~0_combout  = (\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout  & ((\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout ) # ((\counting_logic|count [0] & 
// \decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout )))) # (!\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout  & (\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout  $ (((\counting_logic|count [0] & 
// !\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout )))))

	.clk(gnd),
	.dataa(\counting_logic|count [0]),
	.datab(\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout ),
	.datac(\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ),
	.datad(\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|WideOr3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|WideOr3~0 .lut_mask = "ecd2";
defparam \decoder|WideOr3~0 .operation_mode = "normal";
defparam \decoder|WideOr3~0 .output_mode = "comb_only";
defparam \decoder|WideOr3~0 .register_cascade_mode = "off";
defparam \decoder|WideOr3~0 .sum_lutc_input = "datac";
defparam \decoder|WideOr3~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N9
maxii_lcell \display|segment[3] (
// Equation(s):
// \display|segment [3] = DFFEAS((\display|Selector5~0_combout  & ((\display|scan_index [0] & (\display|Selector5~1_combout )) # (!\display|scan_index [0] & ((!\decoder|WideOr3~0_combout ))))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\display|Selector5~0_combout ),
	.datab(\display|scan_index [0]),
	.datac(\display|Selector5~1_combout ),
	.datad(\decoder|WideOr3~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|segment [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|segment[3] .lut_mask = "80a2";
defparam \display|segment[3] .operation_mode = "normal";
defparam \display|segment[3] .output_mode = "reg_only";
defparam \display|segment[3] .register_cascade_mode = "off";
defparam \display|segment[3] .sum_lutc_input = "datac";
defparam \display|segment[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N3
maxii_lcell \display|Selector6~2 (
// Equation(s):
// \display|Selector6~2_combout  = ((!\display|scan_index [0] & (!\display|scan_index [1] & !\display|scan_index [2])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\display|scan_index [0]),
	.datac(\display|scan_index [1]),
	.datad(\display|scan_index [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\display|Selector6~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|Selector6~2 .lut_mask = "0003";
defparam \display|Selector6~2 .operation_mode = "normal";
defparam \display|Selector6~2 .output_mode = "comb_only";
defparam \display|Selector6~2 .register_cascade_mode = "off";
defparam \display|Selector6~2 .sum_lutc_input = "datac";
defparam \display|Selector6~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y5_N5
maxii_lcell \display|Selector0~0 (
// Equation(s):
// \display|Selector0~0_combout  = (\display|Selector6~2_combout  & (((!\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout  & !\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout )) # 
// (!\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout )))

	.clk(gnd),
	.dataa(\display|Selector6~2_combout ),
	.datab(\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ),
	.datac(\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout ),
	.datad(\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\display|Selector0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|Selector0~0 .lut_mask = "02aa";
defparam \display|Selector0~0 .operation_mode = "normal";
defparam \display|Selector0~0 .output_mode = "comb_only";
defparam \display|Selector0~0 .register_cascade_mode = "off";
defparam \display|Selector0~0 .sum_lutc_input = "datac";
defparam \display|Selector0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N0
maxii_lcell \display|Selector2~0 (
// Equation(s):
// \display|Selector2~0_combout  = (!\display|scan_index [2] & (\display|scan_index [0] & (!\display|scan_index [1] & !\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout )))

	.clk(gnd),
	.dataa(\display|scan_index [2]),
	.datab(\display|scan_index [0]),
	.datac(\display|scan_index [1]),
	.datad(\decoder|Div0|auto_generated|divider|divider|add_sub_3|add_sub_cella[2]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\display|Selector2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|Selector2~0 .lut_mask = "0004";
defparam \display|Selector2~0 .operation_mode = "normal";
defparam \display|Selector2~0 .output_mode = "comb_only";
defparam \display|Selector2~0 .register_cascade_mode = "off";
defparam \display|Selector2~0 .sum_lutc_input = "datac";
defparam \display|Selector2~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N4
maxii_lcell \decoder|Decoder0~0 (
// Equation(s):
// \decoder|Decoder0~0_combout  = (!\counting_logic|count [0] & (\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout  & (!\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout  & 
// !\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout )))

	.clk(gnd),
	.dataa(\counting_logic|count [0]),
	.datab(\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout ),
	.datac(\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout ),
	.datad(\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\decoder|Decoder0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \decoder|Decoder0~0 .lut_mask = "0004";
defparam \decoder|Decoder0~0 .operation_mode = "normal";
defparam \decoder|Decoder0~0 .output_mode = "comb_only";
defparam \decoder|Decoder0~0 .register_cascade_mode = "off";
defparam \decoder|Decoder0~0 .sum_lutc_input = "datac";
defparam \decoder|Decoder0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N5
maxii_lcell \display|segment[4] (
// Equation(s):
// \display|segment [4] = DFFEAS(((\display|Selector2~0_combout ) # ((\display|Selector0~0_combout  & !\decoder|Decoder0~0_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\display|Selector0~0_combout ),
	.datab(vcc),
	.datac(\display|Selector2~0_combout ),
	.datad(\decoder|Decoder0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|segment [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|segment[4] .lut_mask = "f0fa";
defparam \display|segment[4] .operation_mode = "normal";
defparam \display|segment[4] .output_mode = "reg_only";
defparam \display|segment[4] .register_cascade_mode = "off";
defparam \display|segment[4] .sum_lutc_input = "datac";
defparam \display|segment[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N8
maxii_lcell \display|Selector1~3 (
// Equation(s):
// \display|Selector1~3_combout  = (\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout  & (\counting_logic|count [0] $ (\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout  $ (\counting_logic|count [1]))))

	.clk(gnd),
	.dataa(\counting_logic|count [0]),
	.datab(\decoder|Mod0|auto_generated|divider|divider|add_sub_4|add_sub_cella[2]~0_combout ),
	.datac(\counting_logic|count [1]),
	.datad(\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\display|Selector1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|Selector1~3 .lut_mask = "9600";
defparam \display|Selector1~3 .operation_mode = "normal";
defparam \display|Selector1~3 .output_mode = "comb_only";
defparam \display|Selector1~3 .register_cascade_mode = "off";
defparam \display|Selector1~3 .sum_lutc_input = "datac";
defparam \display|Selector1~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N9
maxii_lcell \display|segment[5] (
// Equation(s):
// \display|segment [5] = DFFEAS((\display|Selector2~0_combout ) # ((\display|Selector0~0_combout  & ((\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout ) # (!\display|Selector1~3_combout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\display|Selector0~0_combout ),
	.datab(\display|Selector2~0_combout ),
	.datac(\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout ),
	.datad(\display|Selector1~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|segment [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|segment[5] .lut_mask = "ecee";
defparam \display|segment[5] .operation_mode = "normal";
defparam \display|segment[5] .output_mode = "reg_only";
defparam \display|segment[5] .register_cascade_mode = "off";
defparam \display|segment[5] .sum_lutc_input = "datac";
defparam \display|segment[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y4_N7
maxii_lcell \display|anode_ctrl[1] (
// Equation(s):
// \display|Selector5~3  = (!\display|scan_index [1] & (((!\display|scan_index [2] & \display|scan_index [0]))))
// \display|anode_ctrl [1] = DFFEAS(\display|Selector5~3 , GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\display|scan_index [1]),
	.datab(vcc),
	.datac(\display|scan_index [2]),
	.datad(\display|scan_index [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\display|Selector5~3 ),
	.regout(\display|anode_ctrl [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|anode_ctrl[1] .lut_mask = "0500";
defparam \display|anode_ctrl[1] .operation_mode = "normal";
defparam \display|anode_ctrl[1] .output_mode = "reg_and_comb";
defparam \display|anode_ctrl[1] .register_cascade_mode = "off";
defparam \display|anode_ctrl[1] .sum_lutc_input = "datac";
defparam \display|anode_ctrl[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N6
maxii_lcell \display|Selector0~1 (
// Equation(s):
// \display|Selector0~1_combout  = (!\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout  & (!\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout  & (\counting_logic|count [0] $ 
// (\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ))))

	.clk(gnd),
	.dataa(\counting_logic|count [0]),
	.datab(\decoder|Mod0|auto_generated|divider|divider|StageOut[23]~4_combout ),
	.datac(\decoder|Mod0|auto_generated|divider|divider|StageOut[22]~1_combout ),
	.datad(\decoder|Mod0|auto_generated|divider|divider|StageOut[21]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\display|Selector0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|Selector0~1 .lut_mask = "0012";
defparam \display|Selector0~1 .operation_mode = "normal";
defparam \display|Selector0~1 .output_mode = "comb_only";
defparam \display|Selector0~1 .register_cascade_mode = "off";
defparam \display|Selector0~1 .sum_lutc_input = "datac";
defparam \display|Selector0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N7
maxii_lcell \display|segment[6] (
// Equation(s):
// \display|segment [6] = DFFEAS((\display|Selector5~3  & ((\display|Selector5~1_combout ) # ((\display|Selector0~0_combout  & !\display|Selector0~1_combout )))) # (!\display|Selector5~3  & (((\display|Selector0~0_combout  & !\display|Selector0~1_combout 
// )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\display|Selector5~3 ),
	.datab(\display|Selector5~1_combout ),
	.datac(\display|Selector0~0_combout ),
	.datad(\display|Selector0~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|segment [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|segment[6] .lut_mask = "88f8";
defparam \display|segment[6] .operation_mode = "normal";
defparam \display|segment[6] .output_mode = "reg_only";
defparam \display|segment[6] .register_cascade_mode = "off";
defparam \display|segment[6] .sum_lutc_input = "datac";
defparam \display|segment[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N5
maxii_lcell \display|anode_ctrl[0] (
// Equation(s):
// \display|anode_ctrl [0] = DFFEAS((((!\display|Selector6~2_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\display|Selector6~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|anode_ctrl [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|anode_ctrl[0] .lut_mask = "00ff";
defparam \display|anode_ctrl[0] .operation_mode = "normal";
defparam \display|anode_ctrl[0] .output_mode = "reg_only";
defparam \display|anode_ctrl[0] .register_cascade_mode = "off";
defparam \display|anode_ctrl[0] .sum_lutc_input = "datac";
defparam \display|anode_ctrl[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y4_N5
maxii_lcell \display|anode_ctrl[2] (
// Equation(s):
// \display|anode_ctrl [2] = DFFEAS((\display|scan_index [1] & (((!\display|scan_index [2] & !\display|scan_index [0])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\display|scan_index [1]),
	.datab(vcc),
	.datac(\display|scan_index [2]),
	.datad(\display|scan_index [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|anode_ctrl [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|anode_ctrl[2] .lut_mask = "000a";
defparam \display|anode_ctrl[2] .operation_mode = "normal";
defparam \display|anode_ctrl[2] .output_mode = "reg_only";
defparam \display|anode_ctrl[2] .register_cascade_mode = "off";
defparam \display|anode_ctrl[2] .sum_lutc_input = "datac";
defparam \display|anode_ctrl[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y4_N6
maxii_lcell \display|anode_ctrl[3] (
// Equation(s):
// \display|anode_ctrl [3] = DFFEAS((\display|scan_index [1] & (((!\display|scan_index [2] & \display|scan_index [0])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\display|scan_index [1]),
	.datab(vcc),
	.datac(\display|scan_index [2]),
	.datad(\display|scan_index [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|anode_ctrl [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|anode_ctrl[3] .lut_mask = "0a00";
defparam \display|anode_ctrl[3] .operation_mode = "normal";
defparam \display|anode_ctrl[3] .output_mode = "reg_only";
defparam \display|anode_ctrl[3] .register_cascade_mode = "off";
defparam \display|anode_ctrl[3] .sum_lutc_input = "datac";
defparam \display|anode_ctrl[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y4_N8
maxii_lcell \display|anode_ctrl[4] (
// Equation(s):
// \display|anode_ctrl [4] = DFFEAS((!\display|scan_index [1] & (((\display|scan_index [2] & !\display|scan_index [0])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\display|scan_index [1]),
	.datab(vcc),
	.datac(\display|scan_index [2]),
	.datad(\display|scan_index [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|anode_ctrl [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|anode_ctrl[4] .lut_mask = "0050";
defparam \display|anode_ctrl[4] .operation_mode = "normal";
defparam \display|anode_ctrl[4] .output_mode = "reg_only";
defparam \display|anode_ctrl[4] .register_cascade_mode = "off";
defparam \display|anode_ctrl[4] .sum_lutc_input = "datac";
defparam \display|anode_ctrl[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y4_N3
maxii_lcell \display|anode_ctrl[5] (
// Equation(s):
// \display|anode_ctrl [5] = DFFEAS((!\display|scan_index [1] & (((\display|scan_index [2] & \display|scan_index [0])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\display|scan_index [1]),
	.datab(vcc),
	.datac(\display|scan_index [2]),
	.datad(\display|scan_index [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|anode_ctrl [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|anode_ctrl[5] .lut_mask = "5000";
defparam \display|anode_ctrl[5] .operation_mode = "normal";
defparam \display|anode_ctrl[5] .output_mode = "reg_only";
defparam \display|anode_ctrl[5] .register_cascade_mode = "off";
defparam \display|anode_ctrl[5] .sum_lutc_input = "datac";
defparam \display|anode_ctrl[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N4
maxii_lcell \display|anode_ctrl[6] (
// Equation(s):
// \display|anode_ctrl [6] = DFFEAS(((\display|scan_index [2] & (\display|scan_index [1] & !\display|scan_index [0]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\display|scan_index [2]),
	.datac(\display|scan_index [1]),
	.datad(\display|scan_index [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|anode_ctrl [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|anode_ctrl[6] .lut_mask = "00c0";
defparam \display|anode_ctrl[6] .operation_mode = "normal";
defparam \display|anode_ctrl[6] .output_mode = "reg_only";
defparam \display|anode_ctrl[6] .register_cascade_mode = "off";
defparam \display|anode_ctrl[6] .sum_lutc_input = "datac";
defparam \display|anode_ctrl[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N2
maxii_lcell \display|anode_ctrl[7] (
// Equation(s):
// \display|anode_ctrl [7] = DFFEAS(((\display|scan_index [2] & (\display|scan_index [1] & \display|scan_index [0]))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\display|scan_index [2]),
	.datac(\display|scan_index [1]),
	.datad(\display|scan_index [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\display|anode_ctrl [7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \display|anode_ctrl[7] .lut_mask = "c000";
defparam \display|anode_ctrl[7] .operation_mode = "normal";
defparam \display|anode_ctrl[7] .output_mode = "reg_only";
defparam \display|anode_ctrl[7] .register_cascade_mode = "off";
defparam \display|anode_ctrl[7] .sum_lutc_input = "datac";
defparam \display|anode_ctrl[7] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_20,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \reset~I (
	.datain(gnd),
	.oe(gnd),
	.combout(),
	.padio(reset));
// synopsys translate_off
defparam \reset~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_52,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[0]~I (
	.datain(\display|segment [0]),
	.oe(vcc),
	.combout(),
	.padio(disp[0]));
// synopsys translate_off
defparam \disp[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_53,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[1]~I (
	.datain(\display|segment [1]),
	.oe(vcc),
	.combout(),
	.padio(disp[1]));
// synopsys translate_off
defparam \disp[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_55,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[2]~I (
	.datain(\display|segment [2]),
	.oe(vcc),
	.combout(),
	.padio(disp[2]));
// synopsys translate_off
defparam \disp[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_57,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[3]~I (
	.datain(\display|segment [3]),
	.oe(vcc),
	.combout(),
	.padio(disp[3]));
// synopsys translate_off
defparam \disp[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_58,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[4]~I (
	.datain(\display|segment [4]),
	.oe(vcc),
	.combout(),
	.padio(disp[4]));
// synopsys translate_off
defparam \disp[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_59,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[5]~I (
	.datain(\display|segment [5]),
	.oe(vcc),
	.combout(),
	.padio(disp[5]));
// synopsys translate_off
defparam \disp[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_62,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[6]~I (
	.datain(\display|segment [6]),
	.oe(vcc),
	.combout(),
	.padio(disp[6]));
// synopsys translate_off
defparam \disp[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_63,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \anode_ctrl[0]~I (
	.datain(\display|anode_ctrl [0]),
	.oe(vcc),
	.combout(),
	.padio(anode_ctrl[0]));
// synopsys translate_off
defparam \anode_ctrl[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_66,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \anode_ctrl[1]~I (
	.datain(!\display|anode_ctrl [1]),
	.oe(vcc),
	.combout(),
	.padio(anode_ctrl[1]));
// synopsys translate_off
defparam \anode_ctrl[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_67,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \anode_ctrl[2]~I (
	.datain(!\display|anode_ctrl [2]),
	.oe(vcc),
	.combout(),
	.padio(anode_ctrl[2]));
// synopsys translate_off
defparam \anode_ctrl[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_68,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \anode_ctrl[3]~I (
	.datain(!\display|anode_ctrl [3]),
	.oe(vcc),
	.combout(),
	.padio(anode_ctrl[3]));
// synopsys translate_off
defparam \anode_ctrl[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_69,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \anode_ctrl[4]~I (
	.datain(!\display|anode_ctrl [4]),
	.oe(vcc),
	.combout(),
	.padio(anode_ctrl[4]));
// synopsys translate_off
defparam \anode_ctrl[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_70,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \anode_ctrl[5]~I (
	.datain(!\display|anode_ctrl [5]),
	.oe(vcc),
	.combout(),
	.padio(anode_ctrl[5]));
// synopsys translate_off
defparam \anode_ctrl[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_30,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \anode_ctrl[6]~I (
	.datain(!\display|anode_ctrl [6]),
	.oe(vcc),
	.combout(),
	.padio(anode_ctrl[6]));
// synopsys translate_off
defparam \anode_ctrl[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_31,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \anode_ctrl[7]~I (
	.datain(!\display|anode_ctrl [7]),
	.oe(vcc),
	.combout(),
	.padio(anode_ctrl[7]));
// synopsys translate_off
defparam \anode_ctrl[7]~I .operation_mode = "output";
// synopsys translate_on

endmodule
